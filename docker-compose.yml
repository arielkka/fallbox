version: "3.9"

services:
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"
    restart: always
    networks:
      - dev-network

  handler-service-db:
    restart: always
    image: mysql:latest

    ports:
      - "3307:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=handler_db
    volumes:
      - ./handler/schema:/schema/
    cap_add:
      - SYS_NICE
    networks:
      - dev-network

  excel-service-db:
    restart: always
    image: mysql:latest
    ports:
      - "3308:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=excel_db
    volumes:
      - ./excel/schema:/schema/
    cap_add:
      - SYS_NICE
    networks:
      - dev-network

  txt-service-db:
    restart: always
    image: mysql:latest
    ports:
      - "3309:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=txt_db
    volumes:
      - ./txt/schema:/schema/
    cap_add:
      - SYS_NICE
    networks:
      - dev-network

  handler:
    container_name: handler
    ports:
      - "8080:8080"
    build:
      context: ./handler
      dockerfile: deployments/Dockerfile
    env_file:
      - ./handler/handler.env
    volumes:
      - ./logs/:/usr/src/app/logs/
      - ./output/:/usr/src/app/output/
      - /home/andadmi/Documents/fallbox_inputs/:/usr/src/app/input_files/
    restart: always
    networks:
      - dev-network
    depends_on:
      - rabbitmq
      - handler-service-db

  excel:
    container_name: excel
    build:
      context: ./excel
      dockerfile: deployments/Dockerfile
    env_file:
      - ./excel/excel.env
    volumes:
      - ./logs/:/usr/src/app/logs/
    restart: always
    networks:
      - dev-network
    depends_on:
      - rabbitmq
      - handler
      - excel-service-db

  txt:
    container_name: txt
    build:
      context: ./txt
      dockerfile: deployments/Dockerfile
    env_file:
      - ./txt/txt.env
    volumes:
      - ./logs/:/usr/src/app/logs/
    restart: always
    networks:
      - dev-network
    depends_on:
      - rabbitmq
      - handler
      - txt-service-db

networks:
  dev-network:
    driver: bridge